{"version":3,"file":"static/js/650.27257be6.chunk.js","mappings":"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","sources":["pages/demo1/config.ts","pages/demo1/drawRect.ts","pages/demo1/index.tsx"],"sourcesContent":["export const defaultConfig = {\n  size: 50,\n  throttleTime: 100,\n  colors: [\"#FFCC99\", \"#CCFF99\", \"#CCCCCC\", \"#CCFFFF\", '#FFCCCC', '#FFFF99', '#CCCCFF'],\n};\n","import { defaultConfig } from \"./config\";\n\nconst { size: INITIAL_SIZE, colors } = defaultConfig;\n\n/**\n * @desc 二阶贝塞尔\n * @param {number} t 当前百分比\n * @param {Point} p1 起点坐标\n * @param {Point} cp 控制点\n * @param {Point} p2 终点坐标\n */\nfunction bezier(t: number, p1: Point, cp: Point, p2: Point): Point {\n  const [x1, y1] = p1;\n  const [cx, cy] = cp;\n  const [x2, y2] = p2;\n  let x = (1 - t) * (1 - t) * x1 + 2 * t * (1 - t) * cx + t * t * x2;\n  let y = (1 - t) * (1 - t) * y1 + 2 * t * (1 - t) * cy + t * t * y2;\n  return [x, y];\n}\n\n/** 获取贝塞尔曲线的控制点和终点 */\nfunction getBezierPoint(point: Point): [Point, Point] {\n  // 消失距离\n  const distance = INITIAL_SIZE * 2;\n  // 消失的方向，角度\n  const direct = Math.random() * 2 * Math.PI;\n\n  const endPoint: Point = [\n    point[0] + distance * Math.sin(direct),\n    point[1] + distance * Math.cos(direct),\n  ];\n\n  const centerPoint = [\n    (point[0] + endPoint[0]) / 2,\n    (point[1] + endPoint[1]) / 2,\n  ];\n\n  const controlPoint: Point = [\n    centerPoint[0] - INITIAL_SIZE * Math.sin(direct),\n    centerPoint[1] - INITIAL_SIZE * Math.cos(direct),\n  ];\n\n  return [controlPoint, endPoint];\n}\n\nexport const drawRect = (ctx: CanvasRenderingContext2D, point: Point) => {\n  let size = INITIAL_SIZE,\n    rafTask: number;\n  const color = colors[Math.round(Math.random() * colors.length)];\n  // 矩形填充\n\n  const [controlPoint, endPoint] = getBezierPoint(point);\n\n  const draw = () => {\n    if (size === 0) {\n      cancelAnimationFrame(rafTask);\n      return;\n    }\n\n    size = size < 0.05 ? 0 : size * 0.95;\n\n    const [left, top] = bezier(\n      1 - size / INITIAL_SIZE,\n      point,\n      controlPoint,\n      endPoint\n    );\n\n    ctx.fillStyle = color;\n    ctx.fillRect(left, top, size, size);\n    rafTask = requestAnimationFrame(() => {\n      ctx.clearRect(left - 0.5, top - 0.5, size + 1, size + 1); // 清除时扩大1像素，防止留下残影\n      draw();\n    });\n  };\n\n  draw();\n};\n","import { memo, useEffect, useRef } from \"react\";\n\nimport { drawRect } from \"./drawRect\";\nimport { defaultConfig } from \"./config\";\n\nexport default memo(() => {\n  const ref = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      const ctx = ref.current.getContext(\"2d\");\n\n      let isStart = false;\n      let point: Point = [0, 0];\n      let timer: number;\n\n      const onStart = (e: MouseEvent) => {\n        if (ref.current) {\n          ref.current.style.cursor = \"none\";\n        }\n        isStart = true;\n        point = [\n          e.clientX - defaultConfig.size / 2,\n          e.clientY - defaultConfig.size / 2,\n        ];\n        timer = window.setInterval(() => {\n          ctx && drawRect(ctx, point);\n        }, 100);\n      };\n\n      const onEnd = () => {\n        if (ref.current) {\n          ref.current.style.cursor = \"default\";\n        }\n        isStart = false;\n        clearInterval(timer);\n      };\n\n      const draw = (e: MouseEvent) => {\n        if (ctx && isStart) {\n          point = [\n            e.clientX - defaultConfig.size / 2,\n            e.clientY - defaultConfig.size / 2,\n          ];\n          drawRect(ctx, point);\n        }\n      };\n\n      document.addEventListener(\"mousedown\", onStart);\n      document.addEventListener(\"mouseup\", onEnd);\n      document.addEventListener(\"mousemove\", draw);\n      document.addEventListener(\"contextmenu\", onEnd);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", onStart);\n        document.removeEventListener(\"mouseup\", onEnd);\n        document.removeEventListener(\"contextmenu\", onEnd);\n        document.removeEventListener(\"mousemove\", draw);\n      };\n    }\n  }, []);\n\n  return (\n    <canvas\n      ref={ref}\n      width={window.innerWidth}\n      height={window.innerHeight}\n      style={{ background: \"#000\" }}\n    />\n  );\n});\n"],"names":["defaultConfig","INITIAL_SIZE","colors","drawRect","ctx","point","rafTask","size","color","Math","round","random","length","distance","direct","PI","endPoint","sin","cos","centerPoint","getBezierPoint","controlPoint","draw","t","p1","cp","p2","x1","y1","cx","cy","bezier","left","top","fillStyle","fillRect","requestAnimationFrame","clearRect","cancelAnimationFrame","memo","ref","useRef","useEffect","current","timer","getContext","isStart","onStart","e","style","cursor","clientX","clientY","window","setInterval","onEnd","clearInterval","document","addEventListener","removeEventListener","width","innerWidth","height","innerHeight","background"],"sourceRoot":""}
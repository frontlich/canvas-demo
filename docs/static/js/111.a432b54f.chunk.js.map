{"version":3,"file":"static/js/111.a432b54f.chunk.js","mappings":"iJAUA,I,sBATaA,EAAyD,GAAlDC,KAAKC,IAAIC,OAAOC,WAAYD,OAAOE,aAC1CC,EAAMN,EAFO,GAGbO,EAAQ,EAClBJ,OAAOC,WAAaJ,GAAQ,GAC5BG,OAAOE,YAAcL,GAAQ,GAG1BQ,EAAuB,GAEpBC,EAAI,EAAGA,GAVU,GAUOA,IAAK,CAEpC,IADA,IAAIC,EAAmB,GACdC,EAAI,EAAGA,GAZQ,GAYSA,IAC/BD,EAAQE,KAAK,CAACL,EAAM,GAAKE,EAAIH,EAAKC,EAAM,GAAKI,EAAIL,IAEnDE,EAAUI,KAAKF,EAChB,CAEDG,QAAQC,IAAIN,GAEL,IClBHO,GAAU,EAEDC,EAAY,SAACC,EAA+BC,GACvD,IAAMC,EDeiB,SAACD,GACxB,IAAME,EAAInB,KAAKoB,MAAMH,EAAM,GAAKX,EAAM,IAAMD,EAAM,IAC5CgB,EAAIrB,KAAKoB,MAAMH,EAAM,GAAKX,EAAM,IAAMD,EAAM,IAElD,OAAIc,EAAI,GAAKA,EAxBW,IAwBOE,EAAI,GAAKA,EAxBhB,GAwBuC,KAExDd,EAAUY,GAAGE,EACrB,CCtBWC,CAAUL,GAChBC,IACFF,EAAIO,YACJP,EAAIQ,IAAIN,EAAE,GAAIA,EAAE,GAAIb,EAAM,EAAG,EAAG,EAAIL,KAAKyB,IACzCT,EAAIU,UAAYZ,EAAU,OAAS,OACnCA,GAAWA,EACXE,EAAIW,OACJX,EAAIY,YAEP,E,SCTD,GAAeC,EAAAA,EAAAA,OAAK,WAClB,IAAMC,GAAMC,EAAAA,EAAAA,QAA0B,MAmBtC,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAIG,QAAS,CACf,IAAMjB,EAAMc,EAAIG,QAAQC,WAAW,MAEnClB,GCRmB,SAACA,GACxBA,EAAImB,YAAc,OAClBnB,EAAIoB,UAAY,EAEhB,IADA,cAAe9B,EAAf,GAAOa,EAAP,KAAUE,EAAV,KACSb,EAAI,EAAGA,GAAKT,EAAO,EAAGS,GAAKH,EAClCW,EAAIO,YACJP,EAAIqB,OAAOlB,EAAIX,EAAGa,GAClBL,EAAIsB,OAAOnB,EAAIX,EAAGa,EAAItB,GACtBiB,EAAIuB,SACJvB,EAAIY,YAEJZ,EAAIO,YACJP,EAAIqB,OAAOlB,EAAGE,EAAIb,GAClBQ,EAAIsB,OAAOnB,EAAIpB,EAAMsB,EAAIb,GACzBQ,EAAIuB,SACJvB,EAAIY,WAEP,CDTYY,CAAUxB,GAEjB,IAAMyB,EAAO,SAACC,GACZ1B,GAAOD,EAAUC,EAAK,CAAC0B,EAAEC,QAASD,EAAEE,SACrC,EAKD,OAFAC,SAASC,iBAAiB,QAASL,GAE5B,kBAAMI,SAASE,oBAAoB,QAASN,EAA5C,CACR,CACF,GAAE,KAGD,mBACEX,IAAKA,EACLkB,MAAO9C,OAAOC,WACd8C,OAAQ/C,OAAOE,YACf8C,MAAO,CAAEC,WAAY,UAAWC,OAAQ,cAG7C,G","sources":["pages/gobang/utils.ts","pages/gobang/drawPiece.ts","pages/gobang/index.tsx","pages/gobang/drawBoard.ts"],"sourcesContent":["export const LINE_COUNT = 15; // 15 * 15 的棋盘\nexport const SIDE = Math.min(window.innerWidth, window.innerHeight) * 0.9; // 边长\nexport const GAP = SIDE / LINE_COUNT; // 棋盘线间距\nexport const START = [\n  (window.innerWidth - SIDE) / 2,\n  (window.innerHeight - SIDE) / 2,\n];\n\nconst AllPoints: Point[][] = [];\n\nfor (let i = 0; i <= LINE_COUNT; i++) {\n  let yPoints: Point[] = [];\n  for (let j = 0; j <= LINE_COUNT; j++) {\n    yPoints.push([START[0] + i * GAP, START[1] + j * GAP]);\n  }\n  AllPoints.push(yPoints);\n}\n\nconsole.log(AllPoints);\n\nexport const findPoint = (point: Point) => {\n  const x = Math.ceil((point[0] - START[0]) / GAP - 0.5);\n  const y = Math.ceil((point[1] - START[1]) / GAP - 0.5);\n\n  if (x < 0 || x > LINE_COUNT || y < 0 || y > LINE_COUNT) return null;\n\n  return AllPoints[x][y];\n};\n","import { GAP, findPoint } from \"./utils\";\n\nlet isBlack = false;\n\nexport const drawPiece = (ctx: CanvasRenderingContext2D, point: Point) => {\n  const p = findPoint(point);\n  if (p) {\n    ctx.beginPath();\n    ctx.arc(p[0], p[1], GAP / 3, 0, 2 * Math.PI);\n    ctx.fillStyle = isBlack ? \"#000\" : \"#fff\";\n    isBlack = !isBlack;\n    ctx.fill();\n    ctx.closePath();\n  }\n};\n","import { memo, useEffect, useRef } from \"react\";\n\nimport { drawBoard } from \"./drawBoard\";\nimport { drawPiece } from \"./drawPiece\";\n\nexport default memo(() => {\n  const ref = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      const ctx = ref.current.getContext(\"2d\");\n\n      ctx && drawBoard(ctx);\n\n      const draw = (e: MouseEvent) => {\n        ctx && drawPiece(ctx, [e.clientX, e.clientY]);\n      }\n\n\n      document.addEventListener('click', draw);\n\n      return () => document.removeEventListener('click', draw);\n    }\n  }, []);\n\n  return (\n    <canvas\n      ref={ref}\n      width={window.innerWidth}\n      height={window.innerHeight}\n      style={{ background: \"#e5c683\", cursor: 'crosshair' }}\n    />\n  );\n});\n","import { GAP, SIDE, START } from \"./utils\";\n\n\n/** 画棋盘 */\nexport const drawBoard = (ctx: CanvasRenderingContext2D) => {\n  ctx.strokeStyle = \"#999\";\n  ctx.lineWidth = 2;\n  const [x, y] = START;\n  for (let i = 0; i <= SIDE + 1; i += GAP) {\n    ctx.beginPath();\n    ctx.moveTo(x + i, y);\n    ctx.lineTo(x + i, y + SIDE);\n    ctx.stroke();\n    ctx.closePath();\n\n    ctx.beginPath();\n    ctx.moveTo(x, y + i);\n    ctx.lineTo(x + SIDE, y + i);\n    ctx.stroke();\n    ctx.closePath();\n  }\n};\n"],"names":["SIDE","Math","min","window","innerWidth","innerHeight","GAP","START","AllPoints","i","yPoints","j","push","console","log","isBlack","drawPiece","ctx","point","p","x","ceil","y","findPoint","beginPath","arc","PI","fillStyle","fill","closePath","memo","ref","useRef","useEffect","current","getContext","strokeStyle","lineWidth","moveTo","lineTo","stroke","drawBoard","draw","e","clientX","clientY","document","addEventListener","removeEventListener","width","height","style","background","cursor"],"sourceRoot":""}
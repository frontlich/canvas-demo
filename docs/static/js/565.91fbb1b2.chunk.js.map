{"version":3,"file":"static/js/565.91fbb1b2.chunk.js","mappings":"uKAAaA,EACL,GCCMC,EAAyBD,EAAXE,EDClB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WC0CtE,IAAMC,EAAW,SAACC,EAA+BC,GACtD,IACEC,EADEC,EAAON,EAELO,EAAQN,EAAOO,KAAKC,MAAMD,KAAKE,SAAWT,EAAOU,SAGvDC,EA9BF,SAAwBR,GAEtB,IAAMS,EAA0B,EAAfb,EAEXc,EAAyB,EAAhBN,KAAKE,SAAeF,KAAKO,GAElCC,EAAkB,CACtBZ,EAAM,GAAKS,EAAWL,KAAKS,IAAIH,GAC/BV,EAAM,GAAKS,EAAWL,KAAKU,IAAIJ,IAG3BK,EAAc,EACjBf,EAAM,GAAKY,EAAS,IAAM,GAC1BZ,EAAM,GAAKY,EAAS,IAAM,GAQ7B,MAAO,CALqB,CAC1BG,EAAY,GAAKnB,EAAeQ,KAAKS,IAAIH,GACzCK,EAAY,GAAKnB,EAAeQ,KAAKU,IAAIJ,IAGrBE,EACxB,CAQmCI,CAAehB,GAAMiB,GAAAC,EAAAA,EAAAA,GAAAV,EAAA,GAA/CW,EAAYF,EAAA,GAAEL,EAAQK,EAAA,IAEhB,SAAPG,IACJ,GAAa,IAATlB,EAAJ,CAOA,IAAAmB,EAlDJ,SAAgBC,EAAWC,EAAWC,EAAWC,GAC/C,IAAAC,GAAAR,EAAAA,EAAAA,GAAiBK,EAAE,GAAZI,EAAED,EAAA,GAAEE,EAAEF,EAAA,GACbG,GAAAX,EAAAA,EAAAA,GAAiBM,EAAE,GAAZM,EAAED,EAAA,GAAEE,EAAEF,EAAA,GACbG,GAAAd,EAAAA,EAAAA,GAAiBO,EAAE,GAGnB,MAAO,EAFE,EAAIH,IAAM,EAAIA,GAAKK,EAAK,EAAIL,GAAK,EAAIA,GAAKQ,EAAKR,EAAIA,EADnDU,EAAA,IAEA,EAAIV,IAAM,EAAIA,GAAKM,EAAK,EAAIN,GAAK,EAAIA,GAAKS,EAAKT,EAAIA,EAF/CU,EAAA,GAIf,CA2CwBC,CAClB,GAHF/B,EAAOA,EAAO,IAAO,EAAW,IAAPA,GAGZN,EACXI,EACAmB,EACAP,GACDsB,GAAAhB,EAAAA,EAAAA,GAAAG,EAAA,GALMc,EAAID,EAAA,GAAEE,EAAGF,EAAA,GAOhBnC,EAAIsC,UAAYlC,EAChBJ,EAAIuC,SAASH,EAAMC,EAAKlC,EAAMA,GAC9BD,EAAUsC,uBAAsB,WAC9BxC,EAAIyC,UAAUL,EAAO,GAAKC,EAAM,GAAKlC,EAAO,EAAGA,EAAO,GACtDkB,GACF,GAhBA,MAFEqB,qBAAqBxC,EAmBzB,CAEAmB,EACF,E,SCxEA,GAAesB,EAAAA,EAAAA,OAAK,WAClB,IAAMC,GAAMC,EAAAA,EAAAA,QAA0B,MA6EtC,OA3EAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAIG,QAAS,CACf,IAIIC,EAJEhD,EAAM4C,EAAIG,QAAQE,WAAW,MAE/BC,GAAU,EACVjD,EAAe,CAAC,EAAG,GAGjBkD,EAAU,SAACC,GACXR,EAAIG,UACNH,EAAIG,QAAQM,MAAMC,OAAS,QAE7BJ,GAAU,EACVjD,EAAQ,CAACmD,EAAE,GAAKxD,EAAqB,EAAGwD,EAAE,GAAKxD,EAAqB,GACpEoD,EAAQO,OAAOC,aAAY,WACzBxD,GAAOD,EAASC,EAAKC,EACvB,GAAG,IACL,EAEMwD,EAAQ,WACRb,EAAIG,UACNH,EAAIG,QAAQM,MAAMC,OAAS,WAE7BJ,GAAU,EACVQ,cAAcV,EAChB,EAEM3B,EAAO,SAAC+B,GACRpD,GAAOkD,IACTjD,EAAQ,CACNmD,EAAE,GAAKxD,EAAqB,EAC5BwD,EAAE,GAAKxD,EAAqB,GAE9BG,EAASC,EAAKC,GAElB,EAEM0D,EAAa,SAACC,GAClBA,EAAEC,iBACFV,EAAQ,CAACS,EAAEE,cAAc,GAAGC,QAASH,EAAEE,cAAc,GAAGE,SAC1D,EAEMC,EAAa,SAACL,GAClBT,EAAQ,CAACS,EAAEG,QAASH,EAAEI,SACxB,EAEME,EAAY,SAACN,GACjBA,EAAEC,iBACFxC,EAAK,CAACuC,EAAEE,cAAc,GAAGC,QAASH,EAAEE,cAAc,GAAGE,SACvD,EAEMG,EAAY,SAACP,GACjBvC,EAAK,CAACuC,EAAEG,QAASH,EAAEI,SACrB,EAUA,OARAI,SAASC,iBAAiB,aAAcV,EAAY,CAAEW,SAAS,IAC/DF,SAASC,iBAAiB,YAAaH,EAAW,CAAEI,SAAS,IAC7DF,SAASC,iBAAiB,WAAYZ,GACtCW,SAASC,iBAAiB,YAAaJ,GACvCG,SAASC,iBAAiB,UAAWZ,GACrCW,SAASC,iBAAiB,YAAaF,GACvCC,SAASC,iBAAiB,cAAeZ,GAElC,WACLW,SAASG,oBAAoB,aAAcZ,GAC3CS,SAASG,oBAAoB,YAAaL,GAC1CE,SAASG,oBAAoB,WAAYd,GACzCW,SAASG,oBAAoB,YAAaN,GAC1CG,SAASG,oBAAoB,UAAWd,GACxCW,SAASG,oBAAoB,cAAed,GAC5CW,SAASG,oBAAoB,YAAaJ,EAC5C,CACF,CACF,GAAG,KAGDK,EAAAA,EAAAA,KAAA,UACE5B,IAAKA,EACL6B,MAAOlB,OAAOmB,WACdC,OAAQpB,OAAOqB,YACfvB,MAAO,CAAEwB,WAAY,SAG3B,G","sources":["pages/demo1/config.ts","pages/demo1/drawRect.ts","pages/demo1/index.tsx"],"sourcesContent":["export const defaultConfig = {\n  size: 50,\n  throttleTime: 100,\n  colors: [\"#FFCC99\", \"#CCFF99\", \"#CCCCCC\", \"#CCFFFF\", '#FFCCCC', '#FFFF99', '#CCCCFF'],\n};\n","import { defaultConfig } from \"./config\";\n\nconst { size: INITIAL_SIZE, colors } = defaultConfig;\n\n/**\n * @desc 二阶贝塞尔\n * @param {number} t 当前百分比\n * @param {Point} p1 起点坐标\n * @param {Point} cp 控制点\n * @param {Point} p2 终点坐标\n */\nfunction bezier(t: number, p1: Point, cp: Point, p2: Point): Point {\n  const [x1, y1] = p1;\n  const [cx, cy] = cp;\n  const [x2, y2] = p2;\n  let x = (1 - t) * (1 - t) * x1 + 2 * t * (1 - t) * cx + t * t * x2;\n  let y = (1 - t) * (1 - t) * y1 + 2 * t * (1 - t) * cy + t * t * y2;\n  return [x, y];\n}\n\n/** 获取贝塞尔曲线的控制点和终点 */\nfunction getBezierPoint(point: Point): [Point, Point] {\n  // 消失距离\n  const distance = INITIAL_SIZE * 2;\n  // 消失的方向，角度\n  const direct = Math.random() * 2 * Math.PI;\n\n  const endPoint: Point = [\n    point[0] + distance * Math.sin(direct),\n    point[1] + distance * Math.cos(direct),\n  ];\n\n  const centerPoint = [\n    (point[0] + endPoint[0]) / 2,\n    (point[1] + endPoint[1]) / 2,\n  ];\n\n  const controlPoint: Point = [\n    centerPoint[0] - INITIAL_SIZE * Math.sin(direct),\n    centerPoint[1] - INITIAL_SIZE * Math.cos(direct),\n  ];\n\n  return [controlPoint, endPoint];\n}\n\nexport const drawRect = (ctx: CanvasRenderingContext2D, point: Point) => {\n  let size = INITIAL_SIZE,\n    rafTask: number;\n  const color = colors[Math.round(Math.random() * colors.length)];\n  // 矩形填充\n\n  const [controlPoint, endPoint] = getBezierPoint(point);\n\n  const draw = () => {\n    if (size === 0) {\n      cancelAnimationFrame(rafTask);\n      return;\n    }\n\n    size = size < 0.05 ? 0 : size * 0.95;\n\n    const [left, top] = bezier(\n      1 - size / INITIAL_SIZE,\n      point,\n      controlPoint,\n      endPoint\n    );\n\n    ctx.fillStyle = color;\n    ctx.fillRect(left, top, size, size);\n    rafTask = requestAnimationFrame(() => {\n      ctx.clearRect(left - 0.5, top - 0.5, size + 1, size + 1); // 清除时扩大1像素，防止留下残影\n      draw();\n    });\n  };\n\n  draw();\n};\n","import { memo, useEffect, useRef } from \"react\";\n\nimport { drawRect } from \"./drawRect\";\nimport { defaultConfig } from \"./config\";\n\nexport default memo(() => {\n  const ref = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      const ctx = ref.current.getContext(\"2d\");\n\n      let isStart = false;\n      let point: Point = [0, 0];\n      let timer: number;\n\n      const onStart = (p: Point) => {\n        if (ref.current) {\n          ref.current.style.cursor = \"none\";\n        }\n        isStart = true;\n        point = [p[0] - defaultConfig.size / 2, p[1] - defaultConfig.size / 2];\n        timer = window.setInterval(() => {\n          ctx && drawRect(ctx, point);\n        }, 100);\n      };\n\n      const onEnd = () => {\n        if (ref.current) {\n          ref.current.style.cursor = \"default\";\n        }\n        isStart = false;\n        clearInterval(timer);\n      };\n\n      const draw = (p: Point) => {\n        if (ctx && isStart) {\n          point = [\n            p[0] - defaultConfig.size / 2,\n            p[1] - defaultConfig.size / 2,\n          ];\n          drawRect(ctx, point);\n        }\n      };\n\n      const touchStart = (e: TouchEvent) => {\n        e.preventDefault();\n        onStart([e.targetTouches[0].clientX, e.targetTouches[0].clientY]);\n      };\n\n      const mouseStart = (e: MouseEvent) => {\n        onStart([e.clientX, e.clientY]);\n      };\n\n      const touchMove = (e: TouchEvent) => {\n        e.preventDefault();\n        draw([e.targetTouches[0].clientX, e.targetTouches[0].clientY]);\n      };\n\n      const mouseMove = (e: MouseEvent) => {\n        draw([e.clientX, e.clientY]);\n      };\n\n      document.addEventListener(\"touchstart\", touchStart, { passive: false });\n      document.addEventListener(\"touchmove\", touchMove, { passive: false });\n      document.addEventListener(\"touchend\", onEnd);\n      document.addEventListener(\"mousedown\", mouseStart);\n      document.addEventListener(\"mouseup\", onEnd);\n      document.addEventListener(\"mousemove\", mouseMove);\n      document.addEventListener(\"contextmenu\", onEnd);\n\n      return () => {\n        document.removeEventListener(\"touchstart\", touchStart);\n        document.removeEventListener(\"touchmove\", touchMove);\n        document.removeEventListener(\"touchend\", onEnd);\n        document.removeEventListener(\"mousedown\", mouseStart);\n        document.removeEventListener(\"mouseup\", onEnd);\n        document.removeEventListener(\"contextmenu\", onEnd);\n        document.removeEventListener(\"mousemove\", mouseMove);\n      };\n    }\n  }, []);\n\n  return (\n    <canvas\n      ref={ref}\n      width={window.innerWidth}\n      height={window.innerHeight}\n      style={{ background: \"#000\" }}\n    />\n  );\n});\n"],"names":["defaultConfig","INITIAL_SIZE","colors","drawRect","ctx","point","rafTask","size","color","Math","round","random","length","_getBezierPoint","distance","direct","PI","endPoint","sin","cos","centerPoint","getBezierPoint","_getBezierPoint2","_slicedToArray","controlPoint","draw","_bezier","t","p1","cp","p2","_p","x1","y1","_cp","cx","cy","_p2","bezier","_bezier2","left","top","fillStyle","fillRect","requestAnimationFrame","clearRect","cancelAnimationFrame","memo","ref","useRef","useEffect","current","timer","getContext","isStart","onStart","p","style","cursor","window","setInterval","onEnd","clearInterval","touchStart","e","preventDefault","targetTouches","clientX","clientY","mouseStart","touchMove","mouseMove","document","addEventListener","passive","removeEventListener","_jsx","width","innerWidth","height","innerHeight","background"],"sourceRoot":""}